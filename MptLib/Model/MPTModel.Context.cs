//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MPT.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MPTEntities : DbContext
    {
        public MPTEntities()
            : base("name=MPTEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<PlcEventCode> PlcEventCodes { get; set; }
        public virtual DbSet<PlcEvent> PlcEvents { get; set; }
        public virtual DbSet<PcEvent> PcEvents { get; set; }
        public virtual DbSet<PlcEventOld> PlcEventsOld { get; set; }
        public virtual DbSet<Factory> Factories { get; set; }
        public virtual DbSet<PlcMessage> PlcMessages { get; set; }
        public virtual DbSet<PcEventIgnoreWord> PcEventIgnoreWords { get; set; }
        public virtual DbSet<PLC> PLCs { get; set; }
        public virtual DbSet<PLCDescription> PLCDescriptions { get; set; }
        public virtual DbSet<PLC_TO> PLC_TOs { get; set; }
        public virtual DbSet<ProjectHMI> ProjectHMIs { get; set; }
        public virtual DbSet<Workstation> Workstations { get; set; }
        public virtual DbSet<RsViewProjectTag> RsViewProjectTags { get; set; }
        public virtual DbSet<Severity> Severities { get; set; }
        public virtual DbSet<AlarmEvent> AlarmEvents { get; set; }
        public virtual DbSet<AlarmTag> AlarmTags { get; set; }
        public virtual DbSet<AlarmValue> AlarmValues { get; set; }
        public virtual DbSet<EventsAlarm> EventsAlarms { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<WorkScheduleHoliday> WorkScheduleHolidays { get; set; }
        public virtual DbSet<WorkScheduleMove> WorkScheduleMoves { get; set; }
    
        public virtual ObjectResult<GetPlcEventsCount_Result> GetPlcEventsCount(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<short> severity)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var severityParameter = severity.HasValue ?
                new ObjectParameter("Severity", severity) :
                new ObjectParameter("Severity", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPlcEventsCount_Result>("GetPlcEventsCount", dateFromParameter, dateToParameter, severityParameter);
        }
    }
}
